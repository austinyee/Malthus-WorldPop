!pip install wbdata
import wbdata
wbdata.get_country()
import pandas as pd
import numpy as np
wbdata.get_topic()

variable_labels = {"AG.LND.ARBL.HA":"Arable land (hectacres)"}
variable_labels_fert = {"AG.CON.FERT.ZS" : "Fertilizer consumption (kilograms per hectare of arable land"}
USA = wbdata.get_dataframe(variable_labels, country="USA" )
USAfert= wbdata.get_dataframe(variable_labels_fert, country="USA" )
#USAfood= wbdata.get_dataframe
#NGA USA 
# Date index is of type string; change to integers
USA.index = USA.index.astype(int)
USAfert.index = USAfert.index.astype(int)

# Print a few years' data
#USA.loc["date" :1990]
#USA(index=[1990])
USA.iloc[1:50]
USAfert.iloc[1:50]

USA.iplot(title="Arable Land",xTitle='Year',yTitle='Hectacres')
USAfert.iplot(title="Fertilizer Utilzation", xTitle='Year', yTitle="Hectacres")




Pandas Data frame
#skip until line


#______________________________________works for almost all datasets we are looking at just issues with whether or not they have data for our regions
def pandas_df(region):
    df=wbdata.get_dataframe({'SP.POP.GROW': 'SSF Total Population growth',
                              'SP.DYN.TFRT.IN' :'Fertility rate, total (births per woman)',
                              'SE.SEC.TCAQ.FE.ZS':'Number of trained female teachers (% of female teachers)',
                            'SL.UEM.TOTL.FE.ZS':'Unemployment, female (% of female labor force)',
                            'SL.UEM.TOTL.MA.ZS':  'Unemployment, male (% of male labor force)'}, country=region)
    df.index = df.index.rename('year')
    df.index = df.index.astype(int)
    #df = df.drop([2021,2020]) #no data for teachers in SSF none 
    return df
pandas_df("SSF") #returns all years in data set
cleaned=pandas_df("SSF")
cleaned.head() #returns most recent 5





Pyramid

!pip install wbdata
import wbdata
import numpy as np
import cufflinks as cf
#
SOURCE = 40
indicators = wbdata.get_indicator(source=SOURCE)
indicators
age_ranges = []

# Ranges top out at 80, and go in five year increments
for i in range(0,80,5):
    age_ranges.append(f"{i:02d}"+f"{i+4:02d}")

age_ranges.append("80UP")

print(age_ranges)
#
male_variables = {"SP.POP."+age_range+".MA":"Males "+age_range for age_range in age_ranges}
female_variables = {"SP.POP."+age_range+".FE":"Females "+age_range for age_range in age_ranges}

variables = male_variables
variables.update(female_variables)

df = wbdata.get_dataframe(variables,country="NAC")
#
import plotly.offline as py
import plotly.graph_objs as go
import pandas as pd
import numpy as np

py.init_notebook_mode(connected=True)

layout = go.Layout(barmode='overlay',
                   yaxis=go.layout.YAxis(range=[0, 90], title='Age'),
                   xaxis=go.layout.XAxis(title='Number'))

year = 2020

bins = [go.Bar(x = df.loc[str(year),:].filter(regex="Male").values,
               y = [int(s[:2])+1 for s in age_ranges],
               orientation='h',
               name='Men',
               marker=dict(color='yellow'),
               hoverinfo='skip'
               ),

        go.Bar(x = -df.loc[str(year),:].filter(regex="Female").values,
               y=[int(s[:2])+1 for s in age_ranges],
               orientation='h',
               name='Women',
               marker=dict(color='red'),
               hoverinfo='skip',
               )
        ]
py.iplot(dict(data=bins, layout=layout))
